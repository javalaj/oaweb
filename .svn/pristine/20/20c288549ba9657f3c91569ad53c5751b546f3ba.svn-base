/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.thinkgem.jeesite.modules.oa.web.fixedassets;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.thinkgem.jeesite.common.config.Global;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.common.utils.DateUtils;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.common.utils.excel.ExportExcel;
import com.thinkgem.jeesite.modules.oa.entity.fixedassets.PerishableHistory;
import com.thinkgem.jeesite.modules.oa.service.fixedassets.PerishableHistoryService;

/**
 * 易耗品历史Controller
 * @author zf
 * @version 2016-12-09
 */
@Controller
@RequestMapping(value = "${adminPath}/oa/fixedassets/perishableHistory")
public class PerishableHistoryController extends BaseController {

	@Autowired
	private PerishableHistoryService perishableHistoryService;
	
	@ModelAttribute
	public PerishableHistory get(@RequestParam(required=false) String id) {
		PerishableHistory entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = perishableHistoryService.get(id);
		}
		if (entity == null){
			entity = new PerishableHistory();
		}
		return entity;
	}
	
	@RequiresPermissions("perishableproducts:perishableProducts:view")
	@RequestMapping(value = {"list", ""})
	public String list(PerishableHistory perishableHistory, HttpServletRequest request, HttpServletResponse response, Model model) {
//		Page<PerishableHistory> page = perishableHistoryService.findPage(new Page<PerishableHistory>(request, response), perishableHistory); 
		
		List<PerishableHistory> list = perishableHistoryService.findList(perishableHistory);
		
		Integer colspan = perishableHistory.getStatisticsWordType().split(",").length;
		
		model.addAttribute("list", list);
		
		model.addAttribute("colspan", colspan);
		
		model.addAttribute("perishableHistoryViewCondition", perishableHistory);
		
		return "modules/oa/fixedassets/perishableHistoryList";
	}

	@RequiresPermissions("oa:fixedassets:perishableHistory:view")
	@RequestMapping(value = "form")
	public String form(PerishableHistory perishableHistory, Model model) {
		model.addAttribute("perishableHistory", perishableHistory);
		return "modules/oa/fixedassets/perishableHistoryForm";
	}

	@RequiresPermissions("oa:fixedassets:perishableHistory:view")
	@RequestMapping(value = "save")
	public String save(PerishableHistory perishableHistory, Model model, RedirectAttributes redirectAttributes) {
		if (!beanValidator(model, perishableHistory)){
			return form(perishableHistory, model);
		}
		perishableHistoryService.save(perishableHistory);
		addMessage(redirectAttributes, "保存办公用品历史成功");
		return "redirect:"+Global.getAdminPath()+"/oa/fixedassets/perishableHistory/?repage";
	}
	
	@RequiresPermissions("oa:fixedassets:perishableHistory:view")
	@RequestMapping(value = "delete")
	public String delete(PerishableHistory perishableHistory, RedirectAttributes redirectAttributes) {
		perishableHistoryService.delete(perishableHistory);
		addMessage(redirectAttributes, "删除办公用品历史成功");
		return "redirect:"+Global.getAdminPath()+"/oa/fixedassets/perishableHistory/?repage";
	}

	/**
	 * 导出用户数据
	 * 
	 * @param user
	 * @param request
	 * @param response
	 * @param redirectAttributes
	 * @return
	 */
	@RequiresPermissions("perishableproducts:perishableProducts:view")
	@RequestMapping(value = "export", method = RequestMethod.POST)
	public String exportFile(PerishableHistory perishableHistory, HttpServletRequest request,
			HttpServletResponse response, RedirectAttributes redirectAttributes) {
		try {
			String fileName = "用户数据" + DateUtils.getDate("yyyyMMddHHmmss")
					+ ".xlsx";
			Page<PerishableHistory> page = perishableHistoryService.findPage(new Page<PerishableHistory>(request,
					response, -1), perishableHistory);
			new ExportExcel("用户数据", PerishableHistory.class).setDataList(page.getList())
					.write(response, fileName).dispose();
			return null;
		} catch (Exception e) {
			addMessage(redirectAttributes, "导出用户失败！失败信息：" + e.getMessage());
		}
		return "redirect:" + Global.getAdminPath() + "/oa/fixedassets/perishableHistory/list?repage";
	}
	
}